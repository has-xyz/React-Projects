{"version":3,"sources":["reducers/index.js","reducers/posts.js","api/index.js","component/Form/Form.jsx","actions/posts.js","component/BlogPosts/Post.jsx","component/BlogPosts/BlogPosts.jsx","component/Home/Home.jsx","App.jsx","index.js"],"names":["combineReducers","posts","action","type","payload","filter","post","_id","url","deletePost","id","axios","delete","Form","currentId","setCurrentId","useState","title","body","postData","setPostData","useSelector","state","find","p","dispatch","useDispatch","useEffect","clear","className","onSubmit","e","preventDefault","a","newPost","data","console","log","message","createPost","placeholder","name","value","onChange","target","Post","key","class","user","moment","createdAt","fromNow","onClick","api","BlogPosts","length","map","Home","get","App","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b94ef1be.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport posts from './posts'\n\nexport default combineReducers({ posts });","export default (posts = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"CREATE\":\n      return [...posts, action.payload];\n    case 'DELETE':\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n","import axios from 'axios';\n\nconst url = 'https://hasan-blog-server.herokuapp.com/posts';\n\nexport const fetchPosts = () => axios.get(url); // Gets all the posts from the server at that url\nexport const createPost = (newPost) => axios.post(url, newPost) // Creates a new post \nexport const deletePost = (id) => axios.delete(`${url}/${id}`) // Delete the post with that id  \n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from \"../../actions/posts\";\n\nexport default function Form({ currentId, setCurrentId }) {\n  const [postData, setPostData] = useState({ title: \"\", body: \"\" });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createPost(postData));\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({title: \"\", body: \"\"});\n}\n\n  return (\n    <div className='container'>\n      <h1 className=\"title has-text-centered\">Blog Form</h1>\n      <div className=\"columns is-centered\">\n      <form onSubmit={handleSubmit} className=\"form column\">\n        <div className=\"field is-fullwidth\">\n          <p className=\"control\">\n            <input \n             className=\"input\" \n             type=\"text\" \n             placeholder=\"Blog title\" \n             name='title'\n             value={postData.title} \n             onChange={(e) => setPostData({...postData, title: e.target.value})}/>\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n          <textarea \n           className=\"textarea\" \n           placeholder=\"Blog message\" \n           name='body'\n           value={postData.body} \n           onChange={(e) => setPostData({...postData, body: e.target.value})}></textarea>\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <button className=\"button is-success is-fullwidth\" type=\"submit\">Post</button>\n          </p>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n}\n","import * as api from '../api';\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts() // Gets the data from the fetchPosts function in the api\n        dispatch({type: 'FETCH_ALL', payload: data});\n    } catch(error) {\n        console.log(error.message)\n    }\n}\n\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post) // Creates a post using the function in the api\n        dispatch({type: 'CREATE', payload: data})\n    } catch(error) {\n        console.log(error.message)\n    }\n}\n\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({type: 'DELETE', payload: id})\n    } catch(error) {\n        console.log(error.message)\n    }\n}","import React from 'react'\nimport moment from 'moment';\nimport {useDispatch} from 'react-redux'\nimport {deletePost} from '../../actions/posts';\n\n\nexport default function Post({post, setCurrentId, key}) {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"card article has-text-centered\" key={post._id}>\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div class=\"media-content has-text-centered\">\n              <p class=\"title article-title\">\n                {post.title}\n              </p>\n              <div class=\"tags has-addons level-item\">\n                <span class=\"tag is-rounded is-info\">@{post.user}</span>\n                <span class=\"tag is-rounded\">{moment(post.createdAt).fromNow()}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"content article-body\">\n            <p>\n              {post.body}\n            </p>\n          </div>\n          <button className=\"button is-danger is-fullwidth\" onClick={() => dispatch(deletePost(post._id))}>DELETE POST</button>\n        </div>\n      </div>\n    )\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"./Post\";\n\nexport default function BlogPosts({ setCurrentId }) {\n  const posts = useSelector((state) => state.posts);\n  console.log(\"Current Posts: \", posts);\n\n  return posts.length ? (\n    <div className=\"container\">\n      <section className=\"articles\">\n        <div className=\"columns is-centered\">\n          <div className=\"column\">\n            {posts.map((post) => (\n              <>\n                <Post post={post} setCurrentId={setCurrentId} key={post._id}/>\n                <br />\n                <br />\n              </>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  ) : null;\n}\n","import React, {useState, useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {getPosts} from '../../actions/posts';\nimport { useSelector } from 'react-redux'\n\nimport Form from '../Form/Form';\nimport BlogPosts from '../BlogPosts/BlogPosts';\n\nexport default function Home() {\n    const dispatch = useDispatch();\n    const [currentId, setCurrentId] = useState(null)\n    const posts = useSelector((state) => state.posts);\n  \n    console.log('Current Posts: ', posts);\n    \n    useEffect(() => {\n      dispatch(getPosts());\n    }, [currentId, dispatch])\n    \n    return (\n        <div>\n            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n            <hr />\n            <BlogPosts setCurrentId={setCurrentId}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport Home from './component/Home/Home'\n\nexport default function App() {\n\n  return (\n    <div>\n      <Home />\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport App from './App';\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(<Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}